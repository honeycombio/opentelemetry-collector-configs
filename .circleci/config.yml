version: 2.1
commands:
  setup_googleko:
    steps:
      - restore_cache:
          keys:
            - v1-googleko
      # we're pinning to ko 11.2 because it v0.12 can't push to ecr
      - run: go install github.com/google/ko@v0.11.2
      - save_cache:
          key: v1-googleko
          paths:
            - /home/circleci/go/pkg/mod/
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.21
    steps:
      - checkout
      - restore_cache:
          keys:
            - builder-config-{{ checksum "builder-config.yaml" }}
      - run:
          name: install dependencies
          environment:
            OTC_BUILDER_VERSION: 0.104.0
            PYTHON_VERSION: 3.9
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y python2  libbz2-dev  libreadline-dev libssl-dev openssl
            curl https://pyenv.run | bash 
            sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
            export PYENV_ROOT=/home/circleci/.pyenv
            export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
            pyenv install $PYTHON_VERSION
            pyenv global $PYTHON_VERSION
            pip3 install yq
            export GOARCH=$(go env GOARCH)
            export GOOS=$(go env GOOS)
            mkdir -p /home/circleci/bin
            curl -sLo /home/circleci/bin/ocb "https://github.com/open-telemetry/opentelemetry-collector/releases/download/cmd%2Fbuilder%2Fv${OTC_BUILDER_VERSION}/ocb_${OTC_BUILDER_VERSION}_${GOOS}_${GOARCH}"
            chmod u+x /home/circleci/bin/ocb
            python --version
            pip3 --version
            ocb version
      - run:
          name: Run tests
          command: |
            export PYENV_ROOT=/home/circleci/.pyenv
            export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
            make test
      - aws-cli/setup:
          role-arn: "arn:aws:iam::702835727665:role/circleci-public-repos"
          role-session-name: "hc-logging-distro"
          aws-region: AWS_REGION
      - run:
          name: Create artifacts
          command: |
            mkdir -p /tmp/images;
            cp build/otelcol_hny_$(go env GOOS)_$(go env GOARCH) /tmp/images;
      - run:
          name: publish docker image to aws ecr
          command: |
            set -x

            export ECR_HOST=702835727665.dkr.ecr.us-east-1.amazonaws.com
            export KO_DOCKER_REPO=${ECR_HOST}

            OCB=ocb make build-binary-internal

            aws ecr get-login-password --region us-east-1 \
              | docker login --username AWS --password-stdin "${ECR_HOST}"
            cd build && ./build-docker.sh
      - save_cache:
          key: builder-config-{{ checksum "builder-config.yaml" }}
          paths: build
      - store_artifacts:
          path: /tmp/images
