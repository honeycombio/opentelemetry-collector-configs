version: 2.1

orbs:
  docker: circleci/docker@2.8.2

executors:
  docker-executor:
    docker:
      - image: cimg/base:current
        user: root

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.24
    steps:
      - checkout
      - restore_cache:
          keys:
            - builder-config-{{ checksum "builder-config.yaml" }}
      - run:
          name: install dependencies
          environment:
            PYTHON_VERSION: 3.9
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y python2  libbz2-dev  libreadline-dev libssl-dev openssl
            curl https://pyenv.run | bash 
            sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
            export PYENV_ROOT=/home/circleci/.pyenv
            export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
            pyenv install $PYTHON_VERSION
            pyenv global $PYTHON_VERSION
            pip3 install yq
            python --version
            pip3 --version
            make install-ocb
      - run:
          name: Run tests
          command: |
            export PYENV_ROOT=/home/circleci/.pyenv
            export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
            make test
      - run:
          name: Create artifacts
          command: |
            mkdir -p /tmp/images;
            cp build/otelcol_hny_$(go env GOOS)_$(go env GOARCH) /tmp/images;
      - save_cache:
          key: builder-config-{{ checksum "builder-config.yaml" }}
          paths: build
      - store_artifacts:
          path: /tmp/images

  build-and-push-multiarch:
    executor: docker-executor
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          privileged: true  # Required for Buildx
      - run:
          no_output_timeout: 30m
          name: Set up Docker Buildx
          command: |
            docker buildx create --use --name multiarch_builder
            docker buildx inspect --bootstrap  # Ensures everything is set up correctly
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Build and Push Multi-Arch Docker Image
          command: |
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --sbom=true \
              --provenance=true \
              --push \
              -t honeycombio/supervised-collector:$CIRCLE_SHA1 \
              -t honeycombio/supervised-collector:latest \
              .

workflows:
  version: 2
  build-and-push-workflow:
    jobs:
      - build-and-push-multiarch:
          context: Honeycomb Secrets for Public Repos
          filters:
            branches:
              only: /supervised-collector/
      - build:
          context: Honeycomb Secrets for Public Repos
          filters:
            branches:
              ignore: /supervised-collector/