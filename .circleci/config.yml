version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.2.0

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.21
    resource_class: arm.large
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - builder-config-{{ checksum "builder-config.yaml" }}
      - run:
          name: install dependencies
          environment:
            OTC_BUILDER_VERSION: 0.104.0
            PYTHON_VERSION: 3.9
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y python2  libbz2-dev  libreadline-dev libssl-dev openssl
            curl https://pyenv.run | bash 
            sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
            export PYENV_ROOT=/home/circleci/.pyenv
            export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
            pyenv install $PYTHON_VERSION
            pyenv global $PYTHON_VERSION
            pip3 install yq
            export GOARCH=$(go env GOARCH)
            export GOOS=$(go env GOOS)
            mkdir -p /home/circleci/bin
            curl -sLo /home/circleci/bin/ocb "https://github.com/open-telemetry/opentelemetry-collector/releases/download/cmd%2Fbuilder%2Fv${OTC_BUILDER_VERSION}/ocb_${OTC_BUILDER_VERSION}_${GOOS}_${GOARCH}"
            chmod u+x /home/circleci/bin/ocb
            python --version
            pip3 --version
            ocb version
      # - run:
      #     name: Run tests
      #     command: |
      #       export PYENV_ROOT=/home/circleci/.pyenv
      #       export PATH=/home/circleci/.pyenv/shims:/home/circleci/.pyenv/bin:/home/circleci/.poetry/bin:$PATH
      #       make test
      - aws-cli/setup:
          role-arn: "arn:aws:iam::702835727665:role/circleci-public-repos"
          role-session-name: "hc-logging-distro"
          aws-region: AWS_REGION
      # - run:
      #     name: Create artifacts
      #     command: |
      #       mkdir -p /tmp/images;
      #       cp build/otelcol_hny_$(go env GOOS)_$(go env GOARCH) /tmp/images;
      - run:
          name: publish docker image to aws ecr
          command: |
            set -x

            export ECR_HOST=702835727665.dkr.ecr.us-east-1.amazonaws.com

            # Create a parallel multi-platform builder
            docker buildx create --name mybuilder --use
            # Make "buildx" the default
            docker buildx install

            aws ecr get-login-password --region us-east-1 \
              | docker login --username AWS --password-stdin "${ECR_HOST}"

            # Build for multiple platforms
            export TAG=codeboten-logging,latest,${CIRCLE_BUILD_NUM}
            docker build --platform linux/arm64 --push -t ${ECR_HOST}/hc-logging-distro:${TAG} .
      - save_cache:
          key: builder-config-{{ checksum "builder-config.yaml" }}
          paths: build
      # - store_artifacts:
      #     path: /tmp/images
